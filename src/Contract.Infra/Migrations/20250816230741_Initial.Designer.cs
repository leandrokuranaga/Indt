// <auto-generated />
using System;
using Contract.Infra;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Contract.Infra.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20250816230741_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Contract.Domain.Contract.Contract", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("ContractDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("InsuranceNameHolder")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ProposalId")
                        .HasColumnType("integer");

                    b.Property<string>("ProposalStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Contracts", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ContractDate = new DateTime(2024, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InsuranceNameHolder = "João da Silva",
                            ProposalId = 1,
                            ProposalStatus = "Approved"
                        },
                        new
                        {
                            Id = 2,
                            ContractDate = new DateTime(2024, 12, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InsuranceNameHolder = "Maria Oliveira",
                            ProposalId = 2,
                            ProposalStatus = "Approved"
                        },
                        new
                        {
                            Id = 3,
                            ContractDate = new DateTime(2025, 1, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InsuranceNameHolder = "Carlos Pereira",
                            ProposalId = 3,
                            ProposalStatus = "Approved"
                        },
                        new
                        {
                            Id = 4,
                            ContractDate = new DateTime(2025, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InsuranceNameHolder = "Ana Souza",
                            ProposalId = 4,
                            ProposalStatus = "Approved"
                        },
                        new
                        {
                            Id = 5,
                            ContractDate = new DateTime(2025, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InsuranceNameHolder = "Pedro Santos",
                            ProposalId = 5,
                            ProposalStatus = "Approved"
                        });
                });

            modelBuilder.Entity("Contract.Domain.Contract.Contract", b =>
                {
                    b.OwnsOne("Contract.Domain.Contract.ValueObjects.CPF", "CPF", b1 =>
                        {
                            b1.Property<int>("ContractId")
                                .HasColumnType("integer");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(11)
                                .HasColumnType("character varying(11)")
                                .HasColumnName("CPF");

                            b1.HasKey("ContractId");

                            b1.ToTable("Contracts");

                            b1.WithOwner()
                                .HasForeignKey("ContractId");

                            b1.HasData(
                                new
                                {
                                    ContractId = 1,
                                    Value = "07038612042"
                                },
                                new
                                {
                                    ContractId = 2,
                                    Value = "20791888010"
                                },
                                new
                                {
                                    ContractId = 3,
                                    Value = "14590488060"
                                },
                                new
                                {
                                    ContractId = 4,
                                    Value = "17448756001"
                                },
                                new
                                {
                                    ContractId = 5,
                                    Value = "68456412007"
                                });
                        });

                    b.OwnsOne("Contract.Domain.Contract.ValueObjects.Money", "MonthlyBill", b1 =>
                        {
                            b1.Property<int>("ContractId")
                                .HasColumnType("integer");

                            b1.Property<string>("Currency")
                                .IsRequired()
                                .HasMaxLength(3)
                                .HasColumnType("character varying(3)");

                            b1.Property<decimal>("Value")
                                .HasPrecision(18, 2)
                                .HasColumnType("numeric(18,2)");

                            b1.HasKey("ContractId");

                            b1.ToTable("Contracts");

                            b1.WithOwner()
                                .HasForeignKey("ContractId");

                            b1.HasData(
                                new
                                {
                                    ContractId = 1,
                                    Currency = "BRL",
                                    Value = 149.90m
                                },
                                new
                                {
                                    ContractId = 2,
                                    Currency = "BRL",
                                    Value = 199.50m
                                },
                                new
                                {
                                    ContractId = 3,
                                    Currency = "BRL",
                                    Value = 99.00m
                                },
                                new
                                {
                                    ContractId = 4,
                                    Currency = "BRL",
                                    Value = 250.00m
                                },
                                new
                                {
                                    ContractId = 5,
                                    Currency = "BRL",
                                    Value = 300.75m
                                });
                        });

                    b.Navigation("CPF")
                        .IsRequired();

                    b.Navigation("MonthlyBill")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
